<UserControl x:Class="LangApp.WpfClient.Views.Controls.LearnControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:LangApp.WpfClient.Views.Controls"
             xmlns:converters="clr-namespace:LangApp.WpfClient.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Foreground="{StaticResource PrimaryForegroundColor}"
             RenderOptions.BitmapScalingMode="HighQuality">
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="24"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </Grid.Resources>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Zadanie "/>
                    <TextBlock Text="{Binding QuestionCounter}"/>
                    <TextBlock Text="/"/>
                    <TextBlock Text="{Binding NumberOfQuestions}"/>
                </StackPanel>

                <TextBlock Text="{Binding Timer}" HorizontalAlignment="Right"/>
            </Grid>

            <Grid Margin="0 0 0 20">
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{StaticResource SecondaryForegroundColor}"/>
                        <Setter Property="FontSize" Value="24"/>
                    </Style>
                </Grid.Resources>

                <WrapPanel>
                    <TextBlock Text="Jakie jest tłumaczenie słowa "/>
                    <TextBlock Text="{Binding TranslationPair.Value.FirstLanguageTranslation.Value}" FontWeight="Bold"/>
                    <TextBlock Text="?"/>
                </WrapPanel>

                <md:PackIcon Foreground="Gold" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Center" Width="40" Height="40" Cursor="Hand">
                    <md:PackIcon.Style>
                        <Style TargetType="md:PackIcon">
                            <Setter Property="Kind" Value="StarOutline"/>
                            <Setter Property="ToolTip" Value="Dodaj słowo do ulubionych"/>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding TranslationPair.Value.IsFavourite}" Value="True">
                                    <Setter Property="Kind" Value="Star"/>
                                    <Setter Property="ToolTip" Value="Usuń słowo z ulubionych"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </md:PackIcon.Style>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding StarMouseLeftButtonDownCommand}" CommandParameter="{Binding TranslationPair}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </md:PackIcon>
            </Grid>
        </StackPanel>

        <Border Grid.Row="1" CornerRadius="20" Margin="100 0">
            <Border.Background>
                <ImageBrush Stretch="UniformToFill" ImageSource="{Binding TranslationPair.Key.ImagePath}"/>
            </Border.Background>
        </Border>

        <StackPanel Grid.Row="2">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10" Visibility="{Binding ClosedAnswerVisibility}" IsEnabled="{Binding AreAnswersEnabled}">
                <StackPanel.Resources>
                    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                        <Setter Property="FontSize" Value="26"/>
                        <Setter Property="Margin" Value="25 10"/>
                    </Style>
                </StackPanel.Resources>

                <RadioButton Grid.Row="0" Grid.Column="0" Content="{Binding ClosedAnswers[0]}" Command="{Binding ClosedAnswerCheckedCommand}" CommandParameter="0" IsChecked="{Binding IsFirstClosedAnswerChecked}"/>
                <RadioButton Grid.Row="0" Grid.Column="1" Content="{Binding ClosedAnswers[1]}" Command="{Binding ClosedAnswerCheckedCommand}" CommandParameter="1"/>
                <RadioButton Grid.Row="1" Grid.Column="0" Content="{Binding ClosedAnswers[2]}" Command="{Binding ClosedAnswerCheckedCommand}" CommandParameter="2"/>
                <RadioButton Grid.Row="1" Grid.Column="1" Content="{Binding ClosedAnswers[3]}" Command="{Binding ClosedAnswerCheckedCommand}" CommandParameter="3"/>
            </StackPanel>

            <TextBox Text="{Binding OpenAnswer}" md:HintAssist.Hint="Tłumaczenie" Width="400" Foreground="{StaticResource PrimaryForegroundColor}" FontSize="26" Margin="10" Visibility="{Binding OpenAnswerVisibility}" IsEnabled="{Binding AreAnswersEnabled}" IsEnabledChanged="TextBox_IsEnabledChanged" IsVisibleChanged="TextBox_IsVisibleChanged">
                <i:Interaction.Behaviors>
                    <converters:TextBoxEnterKeyUpdateBehavior/>
                </i:Interaction.Behaviors>
            </TextBox>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 10 0 20" Visibility="{Binding PronunciationAnswerVisibility}">
                <Button
                  Style="{StaticResource MaterialDesignFloatingActionButton}"
                  Height="75" Width="75" Margin="0 0 100 0"
                  Command="{Binding RecordCommand}" IsEnabled="{Binding IsRecordButtonEnabled}"
                  md:ButtonProgressAssist.IsIndicatorVisible="{Binding IsRecording}"
                  md:ButtonProgressAssist.Value="{Binding RecordProgress}"
                  md:ButtonProgressAssist.IndicatorForeground="White"
                  Background="Red" BorderBrush="Red" Foreground="White">
                    <md:PackIcon Height="40" Width="40">
                        <md:PackIcon.Style>
                            <Style TargetType="md:PackIcon">
                                <Setter Property="Kind" Value="Stop"/>

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRecordComplete}" Value="True">
                                        <Setter Property="Kind" Value="Microphone"/>

                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.8"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </md:PackIcon.Style>
                    </md:PackIcon>
                </Button>

                <Button
                  Style="{StaticResource MaterialDesignFloatingActionButton}"
                  Height="75" Width="75"
                  Command="{Binding RecordPlayCommand}" IsEnabled="{Binding IsPlayButtonEnabled}"
                  md:ButtonProgressAssist.IsIndicatorVisible="{Binding IsRecordPlaying}"
                  md:ButtonProgressAssist.Value="{Binding RecordPlayProgress}"
                  md:ButtonProgressAssist.IndicatorForeground="White"
                  Background="Green" BorderBrush="Green" Foreground="White">
                    <md:PackIcon Height="40" Width="40">
                        <md:PackIcon.Style>
                            <Style TargetType="md:PackIcon">
                                <Setter Property="Kind" Value="Stop"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRecordPlayComplete}" Value="True">
                                        <Setter Property="Kind" Value="Play"/>
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.8"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </md:PackIcon.Style>
                    </md:PackIcon>
                </Button>
            </StackPanel>

            <StackPanel Height="60">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 0 0 20" Visibility="{Binding IsCorrectVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <md:PackIcon Kind="CheckCircle" Width="36" Height="36" VerticalAlignment="Center" Foreground="LawnGreen" Margin="0 0 5 0"/>
                    <TextBlock Text="{Binding CorrectMessage}" FontSize="26" Foreground="LawnGreen" VerticalAlignment="Center"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 0 0 20" Visibility="{Binding IsIncorrectVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="PaleVioletRed"/>
                            <Setter Property="FontSize" Value="30"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </StackPanel.Resources>

                    <md:PackIcon Kind="Error" Width="36" Height="36" VerticalAlignment="Center" Foreground="PaleVioletRed" Margin="0 0 5 0"/>

                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsAnswerVisible, Converter={StaticResource InverseBoolToVisConverter}}">
                        <TextBlock Text="{Binding IncorrectMessage}" FontSize="26" Foreground="PaleVioletRed" VerticalAlignment="Center"/>
                        <Button Content="Pokaż poprawne" Command="{Binding ShowAnswerCommand}" Height="38" Background="PaleVioletRed" BorderBrush="PaleVioletRed" Margin="10 0 0 0"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsAnswerVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <TextBlock Text="Poprawna odpowiedź: "/>
                        <TextBlock Text="{Binding TranslationPair.Value.SecondLanguageTranslation.Value}" FontWeight="Bold"/>
                        <TextBlock Text="{Binding TranslationPair.Value.SecondLanguageTranslation.Phonetic, StringFormat=' [{0}]'}"/>
                        <md:PackIcon Foreground="{StaticResource PrimaryForegroundColor}" Background="Transparent" VerticalAlignment="Center" Width="46" Height="46" Margin="0 -6" HorizontalAlignment="Center" ToolTip="Odtwórz">
                            <md:PackIcon.Style>
                                <Style TargetType="md:PackIcon">
                                    <Setter Property="Kind" Value="VolumeLow"/>
                                    <Setter Property="Cursor" Value="Hand"/>

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsAnswerPlaying}" Value="True">
                                            <Setter Property="Kind" Value="VolumeHigh"/>
                                            <Setter Property="Cursor" Value="Arrow"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </md:PackIcon.Style>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding AnswerVolumeMouseLeftButtonDownCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </md:PackIcon>
                    </StackPanel>
                </StackPanel>
            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 10 0 0">
                <StackPanel.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Width" Value="175"/>
                        <Setter Property="Height" Value="45"/>
                    </Style>
                </StackPanel.Resources>

                <Button Content="Zakończ" Command="{Binding ExitCommand}" Margin="0 0 10 0" Background="PaleVioletRed" BorderBrush="PaleVioletRed"/>
                <Button Content="Pomiń" Command="{Binding SkipCommand}" Margin="10 0" Background="Gray" BorderBrush="Gray" IsEnabled="{Binding CanGoFurther, Converter={StaticResource InvertBooleanConverter}}" Visibility="{Binding IsTest, Converter={StaticResource InverseBoolToVisConverter}}"/>
                <Button Command="{Binding CheckCommand}" Margin="10 0 0 0" Background="LawnGreen" BorderBrush="LawnGreen" IsEnabled="{Binding IsCheckButtonEnabled}" IsDefault="True">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Content" Value="Sprawdź"/>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CanGoFurther}" Value="True">
                                    <Setter Property="Content" Value="Dalej"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
